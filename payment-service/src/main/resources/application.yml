server:
  port: 8081
  servlet:
    context-path: /

spring:
  application:
    name: payment-service

  datasource:
    url: jdbc:postgresql://localhost:5432/payment_db
    username: ${DB_USERNAME:payment_user}
    password: ${DB_PASSWORD:payment_password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: payment-service
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.paymentprocessor.*"
        session.timeout.ms: 30000
        heartbeat.interval.ms: 10000

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        retry.backoff.ms: 100

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.paymentprocessor: INFO
    org.springframework.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"

resilience4j.bulkhead:
  instances:
    commandProcessing:
      max-concurrent-calls: 20
      max-wait-duration: 20ms

# Custom application properties
payment:
  gateway:
    timeout: 30000
    retry:
      max-attempts: 3
      backoff-delay: 1000
  fraud:
    risk-threshold: 0.7
  processing:
    batch-size: 100
    thread-pool-size: 10